legend.background = element_blank())+
scale_color_manual(name='Facility', values=c('ARF'='forestgreen', 'STAFS'='chartreuse2', 'FIRS'='mediumorchid4'))
ggsave("figure1/1DE_weather_data/climate_temp_placement.png",dpi=600, width=6, height=4, units="in")
ggplot(data=table, aes(x=DATE, y=TAVG, group=FACILITY, color=FACILITY)) +
annotate("rect", xmin = "2016-03", xmax = "2016-03", ymin = -Inf, ymax = Inf,
fill = "transparent", alpha = 0, color = NA) +
geom_vline(xintercept = vline.spring$z, size=0.25, color = "darkolivegreen3") +
geom_vline(xintercept = vline.summer$z, size=0.25, color = "firebrick3") +
geom_vline(xintercept = vline.fall$z, size=0.25, color = "gold3") +
geom_vline(xintercept = vline.winter$z, size=0.25, color = "royalblue3") +
geom_line(size=1.5)+
geom_point()+
xlab("Month")+
ylab("Average Temperature (C)")+
theme_bw() +
theme(
axis.text.x = element_text(size=7, color = "black", angle = 45, hjust = 1, vjust = 1),
legend.position = c(0.09,0.15),
legend.title = element_blank(),
legend.key = element_rect(fill = "transparent"),
legend.background = element_blank())+
scale_color_manual(name='Facility', values=c('ARF'='forestgreen', 'STAFS'='chartreuse2', 'FIRS'='mediumorchid4'))
ggsave("figure1/1DE_weather_data/climate_temp_placement.png",dpi=600, width=6, height=4, units="in")
# total preciptation
ggplot(data=table, aes(x=DATE, y=PRCP, group=FACILITY, color=FACILITY)) +
annotate("rect", xmin = "2016-03", xmax = "2016-03", ymin = -Inf, ymax = Inf,
fill = "transparent", alpha = 0, color = NA) +
geom_vline(xintercept = vline.spring$z, size=0.25, color = "darkolivegreen3") +
geom_vline(xintercept = vline.summer$z, size=0.25, color = "firebrick3") +
geom_vline(xintercept = vline.fall$z, size=0.25, color = "gold3") +
geom_vline(xintercept = vline.winter$z, size=0.25, color = "royalblue3") +
geom_line(size=1.5)+
geom_point()+
xlab("Month")+
ylab("Total Precipitation (cm)")+
theme_bw() +
theme(
axis.text.x = element_text(size=7, color = "black", angle = 45, hjust = 1, vjust = 1),
legend.position = c(0.09,0.85),
legend.title = element_blank())+
scale_color_manual(name='Facility', values=c('ARF'='forestgreen', 'STAFS'='chartreuse2', 'FIRS'='mediumorchid4'))
# total preciptation
ggplot(data=table, aes(x=DATE, y=PRCP, group=FACILITY, color=FACILITY)) +
annotate("rect", xmin = "2016-03", xmax = "2016-03", ymin = -Inf, ymax = Inf,
fill = "transparent", alpha = 0, color = NA) +
geom_vline(xintercept = vline.spring$z, size=0.25, color = "darkolivegreen3") +
geom_vline(xintercept = vline.summer$z, size=0.25, color = "firebrick3") +
geom_vline(xintercept = vline.fall$z, size=0.25, color = "gold3") +
geom_vline(xintercept = vline.winter$z, size=0.25, color = "royalblue3") +
geom_line(size=1.5)+
geom_point()+
xlab("Month")+
ylab("Total Precipitation (cm)")+
theme_bw() +
theme(
axis.text.x = element_text(size=7, color = "black", angle = 45, hjust = 1, vjust = 1),
legend.position = c(0.09,0.85),
legend.title = element_blank(),
legend.key = element_rect(fill = "transparent"),
legend.background = element_blank())+
scale_color_manual(name='Facility', values=c('ARF'='forestgreen', 'STAFS'='chartreuse2', 'FIRS'='mediumorchid4'))
ggsave("figure1/1DE_weather_data/climate_precip.png",dpi=600, width=6, height=4, units="in")
## WEATHER DATA SCORES 1D,E
table = read.table('figure1/1DE_weather_data/weather_data.txt', sep= '\t', header=TRUE)
# placements
vline.spring <- data.frame(z = c(1.32, 1.58, 1.90, 2.17, 2.43, 2.5, 2.6, 2.7, 3.19))
vline.summer <- data.frame(z = c(5.84, 6.19, 6.81, 6.81, 7.53, 15.7, 15.8, 15.9, 18.29))
vline.fall <- data.frame(z = c(7.87, 7.97, 8.16, 9.13, 9.23, 9.7, 9.8, 9.97, 20.32))
vline.winter <- data.frame(z = c(10.39, 11.1, 11.2, 11.3, 11.4, 13.32, 21.97, 22.4, 22.61))
# temperature
ggplot(data=table, aes(x=DATE, y=TAVG, group=FACILITY, color=FACILITY)) +
annotate("rect", xmin = "2016-03", xmax = "2016-03", ymin = -Inf, ymax = Inf,
fill = "transparent", alpha = 0, color = NA) +
geom_vline(xintercept = vline.spring$z, size=0.25, color = "darkolivegreen3") +
geom_vline(xintercept = vline.summer$z, size=0.25, color = "firebrick3") +
geom_vline(xintercept = vline.fall$z, size=0.25, color = "gold3") +
geom_vline(xintercept = vline.winter$z, size=0.25, color = "royalblue3") +
geom_line(size=1.5)+
geom_point()+
xlab("Month")+
ylab("Average Temperature (C)")+
theme_bw() +
theme(
axis.text.x = element_text(size=7, color = "black", angle = 45, hjust = 1, vjust = 1),
legend.position = c(0.09,0.15),
legend.title = element_blank(),
legend.key = element_rect(fill = "transparent"),
legend.background = element_blank())+
scale_color_manual(name='Facility', values=c('ARF'='forestgreen', 'STAFS'='chartreuse2', 'FIRS'='mediumorchid4'))
ggsave("figure1/1DE_weather_data/climate_temp_placement.png",dpi=600, width=6, height=4, units="in")
# total preciptation
ggplot(data=table, aes(x=DATE, y=PRCP, group=FACILITY, color=FACILITY)) +
annotate("rect", xmin = "2016-03", xmax = "2016-03", ymin = -Inf, ymax = Inf,
fill = "transparent", alpha = 0, color = NA) +
geom_vline(xintercept = vline.spring$z, size=0.25, color = "darkolivegreen3") +
geom_vline(xintercept = vline.summer$z, size=0.25, color = "firebrick3") +
geom_vline(xintercept = vline.fall$z, size=0.25, color = "gold3") +
geom_vline(xintercept = vline.winter$z, size=0.25, color = "royalblue3") +
geom_line(size=1.5)+
geom_point()+
xlab("Month")+
ylab("Total Precipitation (cm)")+
theme_bw() +
theme(
axis.text.x = element_text(size=7, color = "black", angle = 45, hjust = 1, vjust = 1),
legend.position = c(0.09,0.85),
legend.title = element_blank(),
legend.key = element_rect(fill = "transparent"),
legend.background = element_blank())+
scale_color_manual(name='Facility', values=c('ARF'='forestgreen', 'STAFS'='chartreuse2', 'FIRS'='mediumorchid4'))
ggsave("figure1/1DE_weather_data/climate_precip.png",dpi=600, width=6, height=4, units="in")
## WEATHER DATA SCORES 1D,E
table = read.table('figure1/1DE_weather_data/weather_data.txt', sep= '\t', header=TRUE)
# placements
vline.spring <- data.frame(z = c(1.32, 1.58, 1.90, 2.17, 2.43, 2.5, 2.6, 2.7, 3.19))
vline.summer <- data.frame(z = c(5.84, 6.19, 6.81, 6.81, 7.53, 15.7, 15.8, 15.9, 18.29))
vline.fall <- data.frame(z = c(7.87, 7.97, 8.16, 9.13, 9.23, 9.7, 9.8, 9.97, 20.32))
vline.winter <- data.frame(z = c(10.39, 11.1, 11.2, 11.3, 11.4, 13.32, 21.97, 22.4, 22.61))
# temperature
ggplot(data=table, aes(x=DATE, y=TAVG, group=FACILITY, color=FACILITY)) +
annotate("rect", xmin = "2016-03", xmax = "2016-03", ymin = -Inf, ymax = Inf,
fill = "transparent", alpha = 0, color = NA) +
geom_vline(xintercept = vline.spring$z, size=0.25, color = "darkolivegreen3") +
geom_vline(xintercept = vline.summer$z, size=0.25, color = "firebrick3") +
geom_vline(xintercept = vline.fall$z, size=0.25, color = "gold3") +
geom_vline(xintercept = vline.winter$z, size=0.25, color = "royalblue3") +
geom_line(size=1.5)+
geom_point()+
xlab("Month")+
ylab("Average Temperature (C)")+
theme_bw() +
theme(
axis.text.x = element_text(size=7, color = "black", angle = 45, hjust = 1, vjust = 1),
legend.position = c(0.09,0.15),
legend.title = element_blank(),
legend.key = element_rect(fill = "transparent"),
legend.background = element_blank())+
scale_color_manual(name='Facility', values=c('ARF'='forestgreen', 'STAFS'='chartreuse2', 'FIRS'='mediumorchid4'))
ggsave("figure1/1DE_weather_data/climate_temp.png",dpi=600, width=6, height=4, units="in")
# total preciptation
ggplot(data=table, aes(x=DATE, y=PRCP, group=FACILITY, color=FACILITY)) +
annotate("rect", xmin = "2016-03", xmax = "2016-03", ymin = -Inf, ymax = Inf,
fill = "transparent", alpha = 0, color = NA) +
geom_vline(xintercept = vline.spring$z, size=0.25, color = "darkolivegreen3") +
geom_vline(xintercept = vline.summer$z, size=0.25, color = "firebrick3") +
geom_vline(xintercept = vline.fall$z, size=0.25, color = "gold3") +
geom_vline(xintercept = vline.winter$z, size=0.25, color = "royalblue3") +
geom_line(size=1.5)+
geom_point()+
xlab("Month")+
ylab("Total Precipitation (cm)")+
theme_bw() +
theme(
axis.text.x = element_text(size=7, color = "black", angle = 45, hjust = 1, vjust = 1),
legend.position = c(0.09,0.85),
legend.title = element_blank(),
legend.key = element_rect(fill = "transparent"),
legend.background = element_blank())+
scale_color_manual(name='Facility', values=c('ARF'='forestgreen', 'STAFS'='chartreuse2', 'FIRS'='mediumorchid4'))
ggsave("figure1/1DE_weather_data/climate_precip.png",dpi=600, width=6, height=4, units="in")
library(ggplot2)
library(tidyverse)
library(scales)
library(qiime2R)
library(cowplot)
library(Rmisc)
library(dplyr)
library(viridis)
library(ggpmisc)
library(ggsignif)
library(FSA)
library(hrbrthemes)
library(car)
library(lsmeans)
library(reshape2)
library(multcomp)
library(lme4)
library(lmerTest)
library(merTools)
library(redres)
library(ggrepel)
library(forcats)
library(tidytext)
setwd("~/Dropbox/PMI_3_analyses/multi-omics_data/figures")
##########################################################################
# PMI models
##########################################################################
# functions
data_summary <- function(data, varname, groupnames){
require(dplyr)
summary_func <- function(x, col){
c(mean = mean(x[[col]], na.rm=TRUE),
sd = sd(x[[col]], na.rm=TRUE))
}
grouping<-group_by(data, groupnames)
data_sum<-ddply(grouping, varname)
data_sum <- rename(data_sum, c("mean" = varname))
return(data_sum)
}
# Boxplot of RF MAEs boxplot
errors = read.table('../general-information/CV_errors.txt', sep= '\t', header=TRUE)
errors
errors = subset(errors, Error != "NA")
errors = subset(errors, ModelType != "Leave One Facility Out")
errors$DataType = factor(errors$DataType,levels = c("16S Species", "18S Species", "16S+18S Species", "Bact. MAG Spp.","MAG Gene Modules", "Viral MAG", "Metabolites"))
p1=ggplot(errors, aes(x=DataType, y=Error, fill=SampleType)) +
geom_boxplot(position="dodge", width=0.5, color=c("black"), size=0.25, outlier.size = 0.2) +
stat_summary(fun=mean, geom="point", shape=5, size=1, color="black", position = position_dodge(0.5)) +
scale_fill_manual(values=c("#FDE725FF","#73D055FF","#1F968BFF","#39568CFF")) +
#scale_x_discrete("",breaks=errors$DataType,labels=errors$DataType) +
labs(y="Nested CV MAE Scores (ADD)", x="Data Type") +
ylim(c(0,210)) +
#facet_grid(.~ModelType, scales="free_x") +
guides(fill = guide_legend(override.aes = list(size=0.1))) +
theme_bw() +
theme(axis.title=element_text(size=9),
axis.text=element_text(size=8),
axis.text.x=element_text(size=9, angle=45, vjust=1, hjust=1),
strip.text=element_text(size=9),
strip.background=element_rect(fill=NA,color=NA),
aspect.ratio = 2/1,
legend.text = element_text(size=9),
legend.title = element_blank(),
legend.key.width = unit(0.15, "in"),
legend.key.height = unit(0.15, "in"),
legend.position = "none",
legend.direction = "horizontal",
legend.background = element_rect(fill="white",color="white", size=0.25)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p1
ggsave("generalization_errors_w_eggnog_boxplot.png",dpi=600, width=3, height=4.5, units="in")
# Boxplot of RF MAEs boxplot
errors = read.table('../general-information/CV_errors.txt', sep= '\t', header=TRUE)
errors
errors = subset(errors, Error != "NA")
errors = subset(errors, ModelType != "Leave One Facility Out")
errors$DataType = factor(errors$DataType,levels = c("16S Species", "18S Species", "16S+18S Species", "Bact. MAG Spp.","MAG Gene Modules", "Viral MAG", "Metabolites"))
p1=ggplot(errors, aes(x=DataType, y=Error, fill=SampleType)) +
geom_boxplot(position="dodge", width=0.5, color=c("black"), size=0.25, outlier.size = 0.2) +
stat_summary(fun=mean, geom="point", shape=5, size=1, color="black", position = position_dodge(0.5)) +
scale_fill_manual(values=c("#FDE725FF","#73D055FF","#1F968BFF","#39568CFF")) +
#scale_x_discrete("",breaks=errors$DataType,labels=errors$DataType) +
labs(y="Nested CV MAE Scores (ADD)", x="Data Type") +
ylim(c(0,210)) +
#facet_grid(.~ModelType, scales="free_x") +
guides(fill = guide_legend(override.aes = list(size=0.1))) +
theme_bw() +
theme(axis.title=element_text(size=9),
axis.text=element_text(size=8),
axis.text.x=element_text(size=9, angle=45, vjust=1, hjust=1),
strip.text=element_text(size=9),
strip.background=element_rect(fill=NA,color=NA),
aspect.ratio = 2/1,
legend.text = element_text(size=9),
legend.title = element_blank(),
legend.key.width = unit(0.15, "in"),
legend.key.height = unit(0.15, "in"),
legend.position = "none",
legend.direction = "horizontal",
legend.background = element_rect(fill="white",color="white", size=0.25)) +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p1
ggsave("generalization_errors_boxplot.png",dpi=600, width=3, height=4.5, units="in")
# Boxplot of  taxonomy levels
errors = read.table('../general-information/tax_errors.txt', sep= '\t', header=TRUE)
errors = subset(errors, TaxonomyLevel != "Base")
#errors = subset(errors, DataType == "16S rRNA")
errors$TaxonomyLevel = factor(errors$TaxonomyLevel,levels = c("Species", "Genus", "Family", "Order", "Class", "Phylum"))
p2=ggplot(errors, aes(x=TaxonomyLevel, y=Error, fill=SampleType)) +
facet_grid(. ~ DataType) +
geom_boxplot(position="dodge", width=0.5, color=c("black"), size=0.25, outlier.size = 0.2) +
stat_summary(fun=mean, geom="point", shape=5, size=1, color="black", position = position_dodge(0.5)) +
scale_fill_manual(values=c("#FDE725FF","#73D055FF","#1F968BFF","#39568CFF")) +
labs(y="Nested CV MAE Scores (ADD)", x="Taxonomic Level") +
ylim(c(0,270)) +
guides(fill = guide_legend(override.aes = list(size=0.1),nrow=2)) +
theme_bw() +
theme(axis.title=element_text(size=8),
axis.text=element_text(size=7),
axis.text.x=element_text(size=7, angle=45, vjust=1, hjust=1),
aspect.ratio = 2/1,
legend.text = element_text(size=5.5),
legend.title = element_blank(),
legend.key.width = unit(0.1, "in"),
legend.key.height = unit(0.1, "in"),
legend.position = c(0.5,0.93),
legend.direction = "horizontal") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2
# Boxplot of  taxonomy levels
errors = read.table('../general-information/tax_errors.txt', sep= '\t', header=TRUE)
errors = subset(errors, TaxonomyLevel != "Base")
errors = subset(errors, DataType != "Metagenomic Reads")
errors$TaxonomyLevel = factor(errors$TaxonomyLevel,levels = c("Species", "Genus", "Family", "Order", "Class", "Phylum"))
p2=ggplot(errors, aes(x=TaxonomyLevel, y=Error, fill=SampleType)) +
facet_grid(. ~ DataType) +
geom_boxplot(position="dodge", width=0.5, color=c("black"), size=0.25, outlier.size = 0.2) +
stat_summary(fun=mean, geom="point", shape=5, size=1, color="black", position = position_dodge(0.5)) +
scale_fill_manual(values=c("#FDE725FF","#73D055FF","#1F968BFF","#39568CFF")) +
labs(y="Nested CV MAE Scores (ADD)", x="Taxonomic Level") +
ylim(c(0,270)) +
guides(fill = guide_legend(override.aes = list(size=0.1),nrow=2)) +
theme_bw() +
theme(axis.title=element_text(size=8),
axis.text=element_text(size=7),
axis.text.x=element_text(size=7, angle=45, vjust=1, hjust=1),
aspect.ratio = 2/1,
legend.text = element_text(size=5.5),
legend.title = element_blank(),
legend.key.width = unit(0.1, "in"),
legend.key.height = unit(0.1, "in"),
legend.position = c(0.5,0.93),
legend.direction = "horizontal") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2
ggsave("generalization_errors_taxonomy_boxplot.png",dpi=600, width=2, height=4, units="in")
ggsave("generalization_errors_taxonomy_boxplot.png",dpi=600, width=4, height=2, units="in")
# Boxplot of  taxonomy levels
errors = read.table('../general-information/tax_errors.txt', sep= '\t', header=TRUE)
errors = subset(errors, TaxonomyLevel != "Base")
errors = subset(errors, DataType != "Metagenomic Reads")
errors$TaxonomyLevel = factor(errors$TaxonomyLevel,levels = c("Species", "Genus", "Family", "Order", "Class", "Phylum"))
p2=ggplot(errors, aes(x=TaxonomyLevel, y=Error, fill=SampleType)) +
facet_grid(. ~ DataType) +
geom_boxplot(position="dodge", width=0.5, color=c("black"), size=0.25, outlier.size = 0.2) +
stat_summary(fun=mean, geom="point", shape=5, size=1, color="black", position = position_dodge(0.5)) +
scale_fill_manual(values=c("#FDE725FF","#73D055FF","#1F968BFF","#39568CFF")) +
labs(y="Nested CV MAE Scores (ADD)", x="Taxonomic Level") +
ylim(c(0,270)) +
guides(fill = guide_legend(override.aes = list(size=0.1),nrow=2)) +
theme_bw() +
theme(axis.title=element_text(size=8),
axis.text=element_text(size=7),
axis.text.x=element_text(size=7, angle=45, vjust=1, hjust=1),
aspect.ratio = 2/1,
legend.text = element_text(size=5.5),
legend.title = element_blank(),
legend.key.width = unit(0.1, "in"),
legend.key.height = unit(0.1, "in"),
legend.position = c(0.5,0.93),
legend.direction = "horizontal") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank())
p2
ggsave("generalization_errors_taxonomy_boxplot.png",dpi=600, width=6, height=4, units="in")
# soil data import
table = read.table('ATP.csv', sep= '\,', header=TRUE)
# soil data import
table = read.table('ATP.csv', sep= ',', header=TRUE)
setwd("/Users/zacharyburcham/Dropbox/PMI_3_analyses/multi-omics_data/shotgun/Soil-modeling-Metcalf-lab-main/Bins/Jan2022_mapping/")
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(cowplot)
library(qiime2R)
library(reshape2)
library(nortest)
library(FSA)
library(ggalluvial)
library(readr)
library(forcats)
setwd("/Users/zacharyburcham/Dropbox/PMI_3_analyses/multi-omics_data/shotgun/Soil-modeling-Metcalf-lab-main/Bins/Jan2022_mapping/")
# soil data import
table = read.csv('ATP.csv', header=TRUE)
CMU_table = subset(table, facility=="CMU")
UTK_table = subset(table, facility=="UTK")
SHSU_table = subset(table, facility=="SHSU")
setwd("/Users/zacharyburcham/Dropbox/PMI_3_analyses/multi-omics_data/shotgun/Soil-modeling-Metcalf-lab-main/Bins/Jan2022_mapping/")
# soil data import
table = read.csv('ATP.csv', header=TRUE)
CMU_table = subset(table, facility=="CMU")
UTK_table = subset(table, facility=="UTK")
SHSU_table = subset(table, facility=="SHSU")
# clean up data
CMU_melt = melt(CMU_table, id.vars=c("SampleID","facility","Conv_time","host_subject_ID"), measure.vars = c("Carbohydrates","Lipids","AminoAcids"))
View(CMU_melt)
UTK_melt = melt(UTK_table, id.vars=c("SampleID","facility","Conv_time","host_subject_ID"), measure.vars = c("Carbohydrates","Lipids","AminoAcids"))
SHSU_melt = melt(SHSU_table, id.vars=c("SampleID","facility","Conv_time","host_subject_ID"), measure.vars = c("Carbohydrates","Lipids","AminoAcids"))
# AA linear models
FIRSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(CMU_melt, variables=='AminoAcids'),
REML=TRUE)
# AA linear models
FIRSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(CMU_melt, variable=='AminoAcids'),
REML=TRUE)
FIRSsum = anova(FIRSlinearMod)
FIRSR2m = r.squaredGLMM(FIRSlinearMod)[1]
library(dplyr)
library(tidyr)
library(ggplot2)
library(readxl)
library(cowplot)
library(qiime2R)
library(reshape2)
library(nortest)
library(FSA)
library(ggalluvial)
library(readr)
library(forcats)
setwd("/Users/zacharyburcham/Dropbox/PMI_3_analyses/multi-omics_data/shotgun/Soil-modeling-Metcalf-lab-main/Bins/Jan2022_mapping/")
# soil data import
table = read.csv('ATP.csv', header=TRUE)
CMU_table = subset(table, facility=="CMU")
UTK_table = subset(table, facility=="UTK")
SHSU_table = subset(table, facility=="SHSU")
# clean up data
CMU_melt = melt(CMU_table, id.vars=c("SampleID","facility","Conv_time","host_subject_ID"), measure.vars = c("Carbohydrates","Lipids","AminoAcids"))
UTK_melt = melt(UTK_table, id.vars=c("SampleID","facility","Conv_time","host_subject_ID"), measure.vars = c("Carbohydrates","Lipids","AminoAcids"))
SHSU_melt = melt(SHSU_table, id.vars=c("SampleID","facility","Conv_time","host_subject_ID"), measure.vars = c("Carbohydrates","Lipids","AminoAcids"))
# AA linear models
FIRSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(CMU_melt, variable=='AminoAcids'),
REML=TRUE)
FIRSsum = anova(FIRSlinearMod)
FIRSR2m = r.squaredGLMM(FIRSlinearMod)[1]
library(MuMIn)
FIRSR2m = r.squaredGLMM(FIRSlinearMod)[1]
FIRSsum
FIRSR2m
ARFlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(UTK_melt, variable=='AminoAcids'),
REML=TRUE)
ARFsum = anova(ARFlinearMod)
ARFR2m = r.squaredGLMM(ARFlinearMod)[1]
ARFsum
ARFR2m
STAFSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(SHSU_melt, variable=='AminoAcids'),
REML=TRUE)
STAFSsum = anova(STAFSlinearMod)
STAFSR2m = r.squaredGLMM(STAFSlinearMod)[1]
STAFSsum
STAFSR2m
# soil data import
table = read.csv('ATP.csv', header=TRUE)
CMU_table = subset(table, facility=="CMU")
UTK_table = subset(table, facility=="UTK")
SHSU_table = subset(table, facility=="SHSU")
# clean up data
CMU_melt = melt(CMU_table, id.vars=c("SampleID","facility","Conv_time","host_subject_ID"), measure.vars = c("Carbohydrates","Lipids","AminoAcids"))
UTK_melt = melt(UTK_table, id.vars=c("SampleID","facility","Conv_time","host_subject_ID"), measure.vars = c("Carbohydrates","Lipids","AminoAcids"))
SHSU_melt = melt(SHSU_table, id.vars=c("SampleID","facility","Conv_time","host_subject_ID"), measure.vars = c("Carbohydrates","Lipids","AminoAcids"))
# AA linear models
FIRSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(CMU_melt, variable=='AminoAcids'),
REML=TRUE)
FIRSsum = anova(FIRSlinearMod)
FIRSsum
FIRSR2m = r.squaredGLMM(FIRSlinearMod)[1]
FIRSR2m
ARFlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(UTK_melt, variable=='AminoAcids'),
REML=TRUE)
ARFsum = anova(ARFlinearMod)
ARFsum
ARFR2m = r.squaredGLMM(ARFlinearMod)[1]
ARFR2m
STAFSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(SHSU_melt, variable=='AminoAcids'),
REML=TRUE)
STAFSsum = anova(STAFSlinearMod)
STAFSsum
STAFSR2m = r.squaredGLMM(STAFSlinearMod)[1]
STAFSR2m
# Carb linear models
FIRSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(CMU_melt, variable=='Carbohydrates'),
REML=TRUE)
FIRSsum = anova(FIRSlinearMod)
FIRSsum
FIRSR2m = r.squaredGLMM(FIRSlinearMod)[1]
FIRSR2m
ARFlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(UTK_melt, variable=='Carbohydrates'),
REML=TRUE)
ARFsum = anova(ARFlinearMod)
ARFR2m = r.squaredGLMM(ARFlinearMod)[1]
STAFSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(SHSU_melt, variable=='Carbohydrates'),
REML=TRUE)
ARFsum
ARFR2m
STAFSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(SHSU_melt, variable=='Carbohydrates'),
REML=TRUE)
STAFSsum = anova(STAFSlinearMod)
STAFSsum
STAFSR2m = r.squaredGLMM(STAFSlinearMod)[1]
STAFSR2m
# Lipids linear models
FIRSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(CMU_melt, variable=='Lipids'),
REML=TRUE)
FIRSsum = anova(FIRSlinearMod)
FIRSsum
FIRSR2m = r.squaredGLMM(FIRSlinearMod)[1]
FIRSR2m
ARFlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(UTK_melt, variable=='Lipids'),
REML=TRUE)
ARFsum = anova(ARFlinearMod)
ARFsum
ARFR2m = r.squaredGLMM(ARFlinearMod)[1]
ARFR2m
STAFSlinearMod<-lmer((value)~Conv_time + (1|host_subject_ID),
data=subset(SHSU_melt, variable=='Lipids'),
REML=TRUE)
STAFSsum = anova(STAFSlinearMod)
STAFSsum
STAFSR2m = r.squaredGLMM(STAFSlinearMod)[1]
STAFSR2m
